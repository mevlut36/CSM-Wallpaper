* {
  box-sizing: border-box;
}

.inner {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}

.audio-info {
  display: flex;
  margin-bottom: 20px;
  margin-top: 100px;
}

.audio-canvas {
  position: block;
}

.audio-players {
  background:  url("./src/assets/background.svg");
}

.option-menu {
  color: #fff;
  position: absolute;
  margin-top: 220px;
  border-style: dashed solid;
  border-radius: 10px;
  padding: 10px;
  border-color: #fff;
}

.menu-title {
  transition: transform .2s;
}

.menu-title:hover {
  transform: scale(1.05);
}

/* Customize the label (the checkbox-btn) */
.checkbox-btn {
  display: block;
  position: relative;
  padding-left: 30px;
  margin-bottom: 10px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.checkbox-btn input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.checkbox-btn label {
  cursor: pointer;
  font-size: 14px;
}
/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  border: 2.5px solid #ffffff;
  transition: .2s linear;
}
.checkbox-btn input:checked ~ .checkmark {
  background-color: transparent;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  visibility: hidden;
  opacity: 0;
  left: 50%;
  top: 40%;
  width: 10px;
  height: 14px;
  border: 2px solid #0ea021;
  filter: drop-shadow(0px 0px 10px #0ea021);
  border-width: 0 2.5px 2.5px 0;
  transition: .2s linear;
  transform: translate(-50%, -50%) rotate(-90deg) scale(0.2);
}

/* Show the checkmark when checked */
.checkbox-btn input:checked ~ .checkmark:after {
  visibility: visible;
  opacity: 1;
  transform: translate(-50%, -50%) rotate(0deg) scale(1);
  animation: pulse 1s ease-in;
}

.checkbox-btn input:checked ~ .checkmark {
  transform: rotate(45deg);
  border: none;
}

@keyframes pulse {
  0%,
  100% {
    transform: translate(-50%, -50%) rotate(0deg) scale(1);
  }
  50% {
    transform: translate(-50%, -50%) rotate(0deg) scale(1.6);
  }
}



.text {
  color: #ffffff;
  font-size: 14px;
  font-weight: 600;
  display: block;
  padding-left: 0px;
  margin: auto;
  margin-bottom: 10px;
}

.title {
  color: #fff;
  font-weight: 400;
  font-size: 28px;
  margin-bottom: 0;
  text-align: center;
  padding: 2px;
  line-height: 37px;
}

/* audio image */
.icon-wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
}

.audio-image {
  width: 600px;
  height: 600px;
  display: block;
  padding-bottom: 100px;
  margin: auto;
}

.audio-icon {
  font-size: 40px;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 80px;
  width: 80px;
  border-radius: 50%;
  background: #989898;
}

.audio-image img {
  object-fit: cover;
  width: 100%;
  height: 100%;
  vertical-align: middle;
  border-color: #ffffff;
  border-style: solid;
  border-width: 8px;
}

.timer {
  display: flex;
  align-items: center;
  justify-content: right;
  margin-top: -100px;
  margin-right: -250px;
  font-weight: 700;
  font-size: 40px;
  color: #ffffff;
  text-shadow: 0.1em 0.1em 0.2em black
}

/* controls */
.controls-wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 10px;
}

.controls button, .volume button {
  border: none;
  background-color: transparent;
  margin-right: 10px;
}

button svg {
  font-size: 30px;
}

.volume {
  display: flex;
  align-items: center;
  margin-top: 10px;
  margin-left: 20px;
}

.volume button {
  margin: 0;
}

.progress {
  display: flex;
  width: 100%;
  justify-content: space-between;
  padding: 10px 0; 
  align-items: center;
}

.time {
  color: #ffffff;
  font-size: 16px;
  line-height: 46px;
  padding-left: 100px;
  padding-right: 100px;
}

.time.current {
  color: rgb(255, 255, 255);
}

.top__bar a {
  color: inherit;
}

.top__bar p {
  margin: 0;
}

